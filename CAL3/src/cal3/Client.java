/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cal3;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.InetAddress;
import java.net.Socket;

/**
 *
 * @author Sergio
 */
public class Client extends javax.swing.JFrame {
    
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButtonStopSupermarketControl = new javax.swing.JButton();
        jButtonResumeSupermarketControl = new javax.swing.JButton();
        jButtonStopButcherControl = new javax.swing.JButton();
        jButtonResumeButcherControl = new javax.swing.JButton();
        jButtonStoplFishmongerControl = new javax.swing.JButton();
        jButtonResumelFishmongerControl = new javax.swing.JButton();
        jLabelSupermarketControl = new javax.swing.JLabel();
        jLabelFishmongerControl = new javax.swing.JLabel();
        jLabelButcherControl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonStopSupermarketControl.setText("Stop");
        jButtonStopSupermarketControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopSupermarketControlActionPerformed(evt);
            }
        });

        jButtonResumeSupermarketControl.setText("Resume");
        jButtonResumeSupermarketControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResumeSupermarketControlActionPerformed(evt);
            }
        });

        jButtonStopButcherControl.setText("Stop");
        jButtonStopButcherControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopButcherControlActionPerformed(evt);
            }
        });

        jButtonResumeButcherControl.setText("Resume");
        jButtonResumeButcherControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResumeButcherControlActionPerformed(evt);
            }
        });

        jButtonStoplFishmongerControl.setText("Stop");
        jButtonStoplFishmongerControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStoplFishmongerControlActionPerformed(evt);
            }
        });

        jButtonResumelFishmongerControl.setText("Resume");
        jButtonResumelFishmongerControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResumelFishmongerControlActionPerformed(evt);
            }
        });

        jLabelSupermarketControl.setText("Supermarket Control:");

        jLabelFishmongerControl.setText("Fishmonger Control:");

        jLabelButcherControl.setText("Butcher Control:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Control Module");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSupermarketControl)
                    .addComponent(jLabelFishmongerControl)
                    .addComponent(jLabelButcherControl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonStoplFishmongerControl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonResumelFishmongerControl))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonStopButcherControl)
                            .addComponent(jButtonStopSupermarketControl))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonResumeSupermarketControl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonResumeButcherControl, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStopSupermarketControl)
                    .addComponent(jButtonResumeSupermarketControl)
                    .addComponent(jLabelSupermarketControl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonResumeButcherControl)
                    .addComponent(jButtonStopButcherControl)
                    .addComponent(jLabelButcherControl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonResumelFishmongerControl)
                    .addComponent(jButtonStoplFishmongerControl)
                    .addComponent(jLabelFishmongerControl))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void jButtonStopSupermarketControlActionPerformed(java.awt.event.ActionEvent evt) {                                                              
        // TODO add your handling code here:
        Socket client;
        DataInputStream input;
        DataOutputStream output;
        String message , response;
        boolean correctlySent = false;
        try
        {
            client = new Socket(InetAddress.getLocalHost(), 5000);
            
            input = new DataInputStream(client.getInputStream());
            output = new DataOutputStream(client.getOutputStream());
            while(!correctlySent)// To send the message again if there was an error
            {
                message = "Stop Supermarket";
                output.writeUTF("Operation: " + message);
                response = input.readUTF();
                System.out.println("Response: " + response);
                if(response.equals("OK"))
                {
                    correctlySent = true;
                }
            }
            client.close();
        }
        catch(Exception e)
        {
            
        }        
    }                                                             

    private void jButtonResumeSupermarketControlActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        // TODO add your handling code here:
        Socket client;
        DataInputStream input;
        DataOutputStream output;
        String message , response;
        boolean correctlySent = false;
        try
        {
            client = new Socket(InetAddress.getLocalHost(), 5000);
            
            input = new DataInputStream(client.getInputStream());
            output = new DataOutputStream(client.getOutputStream());
            while(!correctlySent)// To send the message again if there was an error
            {
                message = "Resume Supermarket";
                output.writeUTF("Operation: " + message);
                response = input.readUTF();
                System.out.println("Response: " + response);
                if(response.equals("OK"))
                {
                    correctlySent = true;
                }
            }
            client.close();
        }
        catch(Exception e)
        {
            
        }
    }                                                               

    private void jButtonStopButcherControlActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
        Socket client;
        DataInputStream input;
        DataOutputStream output;
        String message , response;
        boolean correctlySent = false;
        try
        {
            client = new Socket(InetAddress.getLocalHost(), 5000);
            
            input = new DataInputStream(client.getInputStream());
            output = new DataOutputStream(client.getOutputStream());
            while(!correctlySent)// To send the message again if there was an error
            {
                message = "Stop Butcher";
                output.writeUTF("Operation: " + message);
                response = input.readUTF();
                System.out.println("Response: " + response);
                if(response.equals("OK"))
                {
                    correctlySent = true;
                }
            }
            client.close();
        }
        catch(Exception e)
        {
            
        }
    }                                                         

    private void jButtonResumeButcherControlActionPerformed(java.awt.event.ActionEvent evt) {                                                            
        // TODO add your handling code here:
        Socket client;
        DataInputStream input;
        DataOutputStream output;
        String message , response;
        boolean correctlySent = false;
        try
        {
            client = new Socket(InetAddress.getLocalHost(), 5000);
            
            input = new DataInputStream(client.getInputStream());
            output = new DataOutputStream(client.getOutputStream());
            while(!correctlySent)// To send the message again if there was an error
            {
                message = "Resume Butcher";
                output.writeUTF("Operation: " + message);
                response = input.readUTF();
                System.out.println("Response: " + response);
                if(response.equals("OK"))
                {
                    correctlySent = true;
                }
            }
            client.close();
        }
        catch(Exception e)
        {
            
        }
    }                                                           

    private void jButtonStoplFishmongerControlActionPerformed(java.awt.event.ActionEvent evt) {                                                              
        // TODO add your handling code here:
        Socket client;
        DataInputStream input;
        DataOutputStream output;
        String message , response;
        boolean correctlySent = false;
        try
        {
            client = new Socket(InetAddress.getLocalHost(), 5000);
            
            input = new DataInputStream(client.getInputStream());
            output = new DataOutputStream(client.getOutputStream());
            while(!correctlySent)// To send the message again if there was an error
            {
                message = "Stop Fishmonger";
                output.writeUTF("Operation: " + message);
                response = input.readUTF();
                System.out.println("Response: " + response);
                if(response.equals("OK"))
                {
                    correctlySent = true;
                }
            }
            client.close();
        }
        catch(Exception e)
        {
            
        }
    }                                                             

    private void jButtonResumelFishmongerControlActionPerformed(java.awt.event.ActionEvent evt) {                                                                
        // TODO add your handling code here:
        Socket client;
        DataInputStream input;
        DataOutputStream output;
        String message , response;
        boolean correctlySent = false;
        try
        {
            client = new Socket(InetAddress.getLocalHost(), 5000);
            
            input = new DataInputStream(client.getInputStream());
            output = new DataOutputStream(client.getOutputStream());
            while(!correctlySent)// To send the message again if there was an error
            {
                message = "Resume Fishmonger";
                output.writeUTF("Operation: " + message);
                response = input.readUTF();
                System.out.println("Response: " + response);
                if(response.equals("OK"))
                {
                    correctlySent = true;
                }
            }
            client.close();
        }
        catch(Exception e)
        {
            
        }
    }                                                               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonResumeButcherControl;
    private javax.swing.JButton jButtonResumeSupermarketControl;
    private javax.swing.JButton jButtonResumelFishmongerControl;
    private javax.swing.JButton jButtonStopButcherControl;
    private javax.swing.JButton jButtonStopSupermarketControl;
    private javax.swing.JButton jButtonStoplFishmongerControl;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelButcherControl;
    private javax.swing.JLabel jLabelFishmongerControl;
    private javax.swing.JLabel jLabelSupermarketControl;
    // End of variables declaration                                  
}
